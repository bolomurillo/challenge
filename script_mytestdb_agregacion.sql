-- Crear evento para actualizar tablas de agregaci贸n
DELIMITER ;;
DROP EVENT IF EXISTS mytestdb.EV_AGREGACION;;

CREATE EVENT mytestdb.EV_AGREGACION
ON SCHEDULE EVERY 1 DAY STARTS '2020-07-20 00:00:00'
COMMENT 'Generacion de tablas agregadas'
DO BEGIN
  CALL mytestdb.SP_AGREGACION();
END;;



-- Crear stored procedure para construir tablas de agregaci贸n
DROP PROCEDURE IF EXISTS mytestdb.SP_AGREGACION;;

CREATE PROCEDURE mytestdb.SP_AGREGACION()
PROC_LABEL:BEGIN

-- Tabla de agregaci贸n tiempo transmitido por usuario
DELETE FROM mytestdb.AVI001_USUARIOS
WHERE MES = DATE_FORMAT(CURDATE() '%Y-%m');

INSERT INTO TABLE mytestdb.AVI001_USUARIOS
SELECT
  DATE_FORMAT(AC.FH_INICIO, '%Y-%m') AS MES,
  US.NB_EMAIL USUARIO, 
  SUM(AC.DU_CONEXION) TIEMPO_CONEXION
FROM mytestdb.TVI008_ACTIVIDAD AC
JOIN mytestdb.TVI001_USUARIO US
  ON AC.CD_USUARIO = US.CD_USUARIO
 AND US.ST_USUARIO = 1
GROUP BY DATE_FORMAT(AC.FH_INICIO, '%Y-%m'), AC.CD_USUARIO
ORDER BY MES, AC.CD_USUARIO;


-- Tabla de agregaci贸n tiempo transmitido por show
DELETE FROM mytestdb.AVI002_SHOW
WHERE MES = DATE_FORMAT(CURDATE() '%Y-%m');

INSERT INTO TABLE mytestdb.AVI002_SHOW
SELECT
  DATE_FORMAT(SH.FH_ALTA, '%Y-%m') AS MES,
  ES.NB_ESTILO_SHOW ESTILO,
  SH.NB_SHOW PROGRAMA,
  SUM(IFNULL(AC.DU_CONEXION, 0)) TIEMPO_CONEXION
FROM mytestdb.TVI007_SHOW SH
LEFT OUTER JOIN mytestdb.TVI008_ACTIVIDAD AC
  ON SH.CD_SHOW = AC.CD_SHOW
JOIN mytestdb.TVI006_ESTILO_SHOW ES
  ON SH.CD_ESTILO_SHOW = ES.CD_ESTILO_SHOW
GROUP BY MES, SH.CD_SHOW
ORDER BY MES, SH.CD_SHOW;

END;;
DELIMITER ;
